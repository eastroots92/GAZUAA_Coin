<div class="container">
        
        <p>회사에서몰래페이지 </p>
        <p>마케팅회사에서 일하는 김예나씨의 요청으로만들어졌습니다. </p>
        <button onclick="excel()">엑셀 하는 척</button>
        <button onclick="google()">구글 검색 하는 척</button>
        <button onclick="word()">워드 하는 척</button>
        <button onclick="pptx()">pptx하는 척</button>
        <!-- Coinnest -->
        <table class="mdl-data-table mdl-js-data-table mdl-shadow--2dp
        ">
          <thead>
            <tr>
              <th class="mdl-data-table__cell--non-numeric">카테고리</th>
              <th class="mdl-data-table__cell--non-numeric">코인이름</th>
              <th class="mdl-data-table__cell--non-numeric">산가격</th>
              <th class="mdl-data-table__cell--non-numeric">현재가격</th>
              <th class="mdl-data-table__cell--non-numeric">입금금액</th>
              <th class="mdl-data-table__cell--non-numeric">현재금액</th>
              <th class="mdl-data-table__cell--non-numeric">차액(정수값)</th>
              <th class="mdl-data-table__cell--non-numeric">평가손익</th>
              <th colspan="3"></th>
            </tr>
          </thead>
        
          <tbody>
            <% @coinnest.each do |mycoin| %>
              <tr>
                <% 
                  if(mycoin.category=="coinnest")
                    now_coin = Coin.coinnest_getdata(mycoin.coinname)
                  end
                  # 가격 수익률
                  value = Coin.coin_result(mycoin.price,now_coin)
                  # 현재가격-입금가격
                  now_deposit = Coin.coin_price(mycoin.deposit,value)
                %>
                <td class="mdl-data-table__cell--non-numeric">COINNEST</td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.coinname %></td>
                <td class="mdl-data-table__cell--non-numeric"><%= number_with_delimiter(mycoin.price)%>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%= number_with_delimiter(now_coin) %>원</td>
                <td class="mdl-data-table__cell--non-numeric deposit_price"><%= number_with_delimiter(mycoin.deposit)%>원</td>
                <td class="mdl-data-table__cell--non-numeric coin_price"><%= number_with_delimiter(now_deposit)%>원</td>
                <!-- 현재-입금 : 순익 -->
                <td class="mdl-data-table__cell--non-numeric"><%=  number_with_delimiter(now_deposit.to_i - mycoin.deposit.to_i) %>원 </td>
                <!-- 평가손익 -->
                <td class="mdl-data-table__cell--non-numeric value"><%= value %>%</td>
                <!-- <td><%= link_to 'Edit', edit_mycoin_path(mycoin) %></td> -->
                <!-- <td><p class="delete">Destroy</p></td> -->
                <td class="mdl-data-table__cell--non-numeric"><%= link_to 'Destroy', mycoin, method: :delete, data: { confirm: 'Are you sure?' } %></td>
              </tr>
            <% end %>
            <!-- UPBIT -->
            <% @upbit.each do |mycoin| %>
              <tr class="mdl-data-table__cell--non-numeric">
                <% 
                  if(mycoin.category=="upbit")
                  now_coin = Coin.upbit_getdata(mycoin.coinname)
                  end
                  # 가격 수익률
                  value = Coin.coin_result(mycoin.price,now_coin)
                  # 현재가격-입금가격
                  now_deposit = Coin.coin_price(mycoin.deposit,value)
                %>
                <td class="mdl-data-table__cell--non-numeric">UPBIT</td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.coinname %></td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.price %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%= number_with_delimiter(now_coin) %>원</td>
                <td class="mdl-data-table__cell--non-numeric deposit_price"><%= number_with_delimiter(mycoin.deposit)%>원</td>
                <td class="mdl-data-table__cell--non-numeric coin_price"><%= number_with_delimiter(now_deposit) %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%=  number_with_delimiter(now_deposit.to_i - mycoin.deposit.to_i)%>원</td>
                <td class="mdl-data-table__cell--non-numeric value" ><%= value %>%</td>
                <td class="mdl-data-table__cell--non-numeric"><%= link_to 'Destroy', mycoin, method: :delete, data: { confirm: 'Are you sure?' } %></td>
              </tr>
            <% end %>
            <% @upbit_btc.each do |mycoin| %>
              <tr class="mdl-data-table__cell--non-numeric">
                <% 
                  if(mycoin.category=="upbit_btc")
                  now_coin = Coin.upbit_getdata(mycoin.coinname)
                  end
                  # 가격 수익률
                  value = Coin.coin_result(mycoin.price,now_coin)
                  # 현재가격-입금가격
                  now_deposit = Coin.coin_price(mycoin.deposit,value)
                %>
                <td class="mdl-data-table__cell--non-numeric">UPBIT_BTC</td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.coinname %></td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.price %>btc</td>
                <td class="mdl-data-table__cell--non-numeric"><%= number_with_delimiter(now_coin) %>원</td>
                <td class="mdl-data-table__cell--non-numeric deposit_price"><%= number_with_delimiter(mycoin.deposit)%>원</td>
                <td class="mdl-data-table__cell--non-numeric coin_price"><%= number_with_delimiter(now_deposit) %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%=  number_with_delimiter(now_deposit.to_i - mycoin.deposit.to_i)%>원</td>
                <td class="mdl-data-table__cell--non-numeric value" ><%= value %>%</td>
                <td class="mdl-data-table__cell--non-numeric"><%= link_to 'Destroy', mycoin, method: :delete, data: { confirm: 'Are you sure?' } %></td>
              </tr>
            <% end %>
            <% @bithumb.each do |mycoin| %>
              <tr class="mdl-data-table__cell--non-numeric">
                <% 
                  if(mycoin.category=="bithumb")
                  now_coin = Coin.bithumb_getdata(mycoin.coinname)
                  end
                  # 가격 수익률
                  value = Coin.coin_result(mycoin.price,now_coin)
                  # 현재가격-입금가격
                  now_deposit = Coin.coin_price(mycoin.deposit,value)
                %>
                <td class="mdl-data-table__cell--non-numeric">BITHUMB</td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.coinname %></td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.price %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%= number_with_delimiter(now_coin) %>원</td>
                <td class="mdl-data-table__cell--non-numeric deposit_price"><%= number_with_delimiter(mycoin.deposit)%>원</td>
                <td class="mdl-data-table__cell--non-numeric coin_price"><%= number_with_delimiter(now_deposit) %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%=  number_with_delimiter(now_deposit.to_i - mycoin.deposit.to_i)%>원</td>
                <td class="mdl-data-table__cell--non-numeric value" ><%= value %>%</td>
                <td class="mdl-data-table__cell--non-numeric"><%= link_to 'Destroy', mycoin, method: :delete, data: { confirm: 'Are you sure?' } %></td>
              </tr>
            <% end %>
            <% @coinone.each do |mycoin| %>
              <tr class="mdl-data-table__cell--non-numeric">
                <% 
                  if(mycoin.category=="coinone")
                  now_coin = Coin.coinone_getdata(mycoin.coinname)
                  end
                  # 가격 수익률
                  value = Coin.coin_result(mycoin.price,now_coin)
                  # 현재가격-입금가격
                  now_deposit = Coin.coin_price(mycoin.deposit,value)
                %>
                <td class="mdl-data-table__cell--non-numeric">COINONE</td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.coinname %></td>
                <td class="mdl-data-table__cell--non-numeric"><%= mycoin.price %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%= number_with_delimiter(now_coin) %>원</td>
                <td class="mdl-data-table__cell--non-numeric deposit_price"><%= number_with_delimiter(mycoin.deposit)%>원</td>
                <td class="mdl-data-table__cell--non-numeric coin_price"><%= number_with_delimiter(now_deposit) %>원</td>
                <td class="mdl-data-table__cell--non-numeric"><%=  number_with_delimiter(now_deposit.to_i - mycoin.deposit.to_i)%>원</td>
                <td class="mdl-data-table__cell--non-numeric value" ><%= value %>%</td>
                <td class="mdl-data-table__cell--non-numeric"><%= link_to 'Destroy', mycoin, method: :delete, data: { confirm: 'Are you sure?' } %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
         <!-- <td><%# link_to 'Edit', edit_mycoin_path(mycoin) %></td> -->
        <div class="result">
         <ul class="demo-list-item mdl-list total">
            <li class="mdl-list__item">
              <span id="total"class="mdl-list__item-primary-content ">
                
              </span>
            </li>
            <li class="mdl-list__item">
              <span id="deposit" class="mdl-list__item-primary-content ">
               
              </span>
            </li>
            <li class="mdl-list__item">
              <span id="result"class="mdl-list__item-primary-content ">
                
              </span>
            </li>
            <li class="mdl-list__item">
              <span id="total_per"class="mdl-list__item-primary-content">
                
              </span>
            </li>
          </ul>
        </div>
        <br>
        
        <%= link_to 'New Mycoin', new_mycoin_path ,class: "mdl-button mdl-js-button mdl-button--raised"%>
        <%= link_to('Logout', destroy_user_session_path, method: :delete,class: "mdl-button mdl-js-button mdl-button--raised") %>        
              
        </div>
        
        <style>
        .delete{
          margin: 0;
        }
        table{
          width: 100%;
        }
        span{
          display: flex;
          justify-content: flex-end;
        }
        .result{
          display: flex;
          justify-content: flex-end;
        }
        #value{
          color:black;
        }
        .total{
          text-align: right;
        }
        
        body{
            background: url(<%= asset_path 'excel.png' %>);
            background-size: cover;
        }
        </style>
        
        <script>
          $( document ).ready(function() {
            // 수익률 + 면 빨간글씨, - 면 파란글씨 
            result =$(".value");
            for(i=0;i<result.length;i++){
             if(result[i].innerHTML[0] == "-"){
               console.log(result[i].innerHTML)
               result[i].style.color ="blue";
             }
             else{
                result[i].style.color ="red";
             }
            }
            // 현재 금액 총 토탈 값
            coin_price =$(".coin_price");
            total = numberWithCommas(total_value(coin_price));
            $("#total")[0].innerHTML= "total price: "+ total+"원";
        
            deposit_price = $(".deposit_price")
            deposit = numberWithCommas(total_value(deposit_price));
            $("#deposit")[0].innerHTML= "입금금액: "+deposit+"원";
            // 토탈 - 입금 : 수익 
            result = numberWithCommas(numberWithoutCommas(total)-numberWithoutCommas(deposit));
            $("#result")[0].innerHTML= "순수익: "+result+"원";
        
            // 순수익
            total_per = $("#total_per")[0];
            console.log(total_per);
            total_per.innerHTML = ((numberWithoutCommas(total)/numberWithoutCommas(deposit)-1)*100).toFixed(2)+"%";
            if(total_per.innerHTML[0] == "-"){
              total_per.style.color ="blue";
            }
            else{
              total_per.style.color ="red";
            }
            total_per.innerHTML="수익률: "+total_per.innerHTML;
        
        
            function numberWithCommas(x) {
              return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
            function total_value(params){
              sum = 0 ;
              for(i = 0 ; i <params.length;i++){
                console.log(numberWithoutCommas(params[i].innerHTML.slice(0,-1)));
                sum += parseInt(numberWithoutCommas(params[i].innerHTML.slice(0,-1)));
              }
              return sum;
            }
            function numberWithoutCommas(x){
              return parseInt(x.replace(/,/g,""));
            }
          
          });
        
          $(".delete").click(function(){
            alert("hi")
          })
        
          function google() {
            $("body").css({
              'background': 'url(<%= asset_path 'google.png' %>)',
              'background-size': 'cover'
           }) 
          }
          function excel() {
           $("body").css({
              'background': 'url(<%= asset_path 'excel.png' %>)',
              'background-size': 'cover'});
          }
          function pptx() {
            $("body").css({
               'background': 'url(<%= asset_path 'pptx.png' %>)',
               'background-size': 'cover'});
           }
          function word() {
              $("body").css({
                 'background': 'url(<%= asset_path 'word.png' %>)',
                 'background-size': 'cover'});
          }
        </script>
        
